<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alfred.dao.PaymentSettlementMapper" >
  <resultMap id="BaseResultMap" type="com.alfred.model.PaymentSettlement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_no" property="billNo" jdbcType="INTEGER" />
    <result column="payment_id" property="paymentId" jdbcType="INTEGER" />
    <result column="payment_type_id" property="paymentTypeId" jdbcType="INTEGER" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="restaurant_id" property="restaurantId" jdbcType="INTEGER" />
    <result column="revenue_id" property="revenueId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="sys_create_time" property="sysCreateTime" jdbcType="TIMESTAMP" />
    <result column="sys_update_time" property="sysUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="TransactionResultMap" type="com.alfred.vo.TransactionVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_no" property="billNo" jdbcType="INTEGER" />
    <result column="payment_id" property="paymentId" jdbcType="INTEGER" />
    <result column="payment_type_id" property="paymentTypeId" jdbcType="INTEGER" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="restaurant_id" property="restaurantId" jdbcType="INTEGER" />
    <result column="revenue_id" property="revenueId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DECIMAL" />
    <result column="tax_amount" property="taxAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="emp_name" property="empName" jdbcType="VARCHAR" />
    <result column="business_date" property="businessDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="selectTransaction" resultMap="TransactionResultMap" parameterType="java.util.HashMap">
  	SELECT s.*, p.tax_amount, p.payment_amount, p.discount_amount, p.business_date, 
  	(SELECT CONCAT(first_name,last_name) FROM user WHERE id=s.user_id) as emp_name
		FROM payment p, payment_settlement s 
		WHERE p.id=s.payment_id AND s.restaurant_id= #{restaurantId,jdbcType=INTEGER}
		<if test="revenueId != null">
			<![CDATA[ AND p.revenue_id=#{revenueId,jdbcType=INTEGER}]]>
		</if>
		<if test="startTime != null">
			<![CDATA[ AND p.business_date>=STR_TO_DATE(#{startTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ AND p.business_date<=STR_TO_DATE(#{endTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
	  <if test="start != null">
		<![CDATA[  limit  #{start,jdbcType=INTEGER}, #{end,jdbcType=INTEGER} ]]>
	    </if>
  </select>
  
  
  <select id="getTransactionCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
  	SELECT count(*)
		FROM payment p, payment_settlement s 
		WHERE p.id=s.payment_id AND s.restaurant_id= #{restaurantId,jdbcType=INTEGER}
		<if test="revenueId != null">
			<![CDATA[ AND p.revenue_id=#{revenueId,jdbcType=INTEGER}]]>
		</if>
		<if test="startTime != null">
			<![CDATA[ AND p.business_date>=STR_TO_DATE(#{startTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ AND p.business_date<=STR_TO_DATE(#{endTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
  </select>
  
  
  
  
  <select id="selectTransactionByRest" resultMap="TransactionResultMap" parameterType="java.util.HashMap">
  	SELECT s.*, SUM(p.tax_amount) as tax_amount, SUM(p.payment_amount) as payment_amount, SUM(p.discount_amount) as discount_amount,
  	p.business_date
		FROM payment p, payment_settlement s 
		WHERE p.id=s.payment_id AND s.restaurant_id= #{restaurantId,jdbcType=INTEGER}
		<if test="startTime != null">
			<![CDATA[ AND p.business_date>=STR_TO_DATE(#{startTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ AND p.business_date<=STR_TO_DATE(#{endTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
		GROUP BY DATE(p.business_date)
	    <if test="start != null">
		<![CDATA[  limit  #{start,jdbcType=INTEGER}, #{end,jdbcType=INTEGER} ]]>
	    </if>
  </select>
  
  
  <select id="getTransactionByRestCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
  	  select count(*) 
  	  from (select count(*)
		FROM payment p, payment_settlement s 
		WHERE p.id=s.payment_id AND s.restaurant_id= #{restaurantId,jdbcType=INTEGER}
		<if test="startTime != null">
			<![CDATA[ AND p.business_date>=STR_TO_DATE(#{startTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ AND p.business_date<=STR_TO_DATE(#{endTime}, '%m/%d/%Y %H:%i:%s')]]>
		</if>
		GROUP BY DATE(p.business_date))t
  </select>
  
  
  <sql id="Base_Column_List" >
    id, bill_no, payment_id, payment_type_id, paid_amount, total_amount, restaurant_id, 
    revenue_id, user_id, create_time, update_time, sys_create_time, sys_update_time
  </sql>
  <select id="selectByParam" resultMap="BaseResultMap" parameterType="com.alfred.model.PaymentSettlement" >
    select
    <include refid="Base_Column_List" />
    from payment_settlement
    <where >
      <if test="billNo != null" >
        AND bill_no = #{billNo,jdbcType=INTEGER}
      </if>
      <if test="paymentId != null" >
        AND payment_id = #{paymentId,jdbcType=INTEGER}
      </if>
      <if test="paymentTypeId != null" >
        AND payment_type_id = #{paymentTypeId,jdbcType=INTEGER}
      </if>
      <if test="paidAmount != null" >
        AND paid_amount = #{paidAmount,jdbcType=DECIMAL}
      </if>
      <if test="totalAmount != null" >
        AND total_amount = #{totalAmount,jdbcType=DECIMAL}
      </if>
      <if test="restaurantId != null" >
        AND restaurant_id = #{restaurantId,jdbcType=INTEGER}
      </if>
      <if test="revenueId != null" >
        AND revenue_id = #{revenueId,jdbcType=INTEGER}
      </if>
      <if test="userId != null" >
        AND user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null" >
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="sysCreateTime != null" >
        AND sys_create_time = #{sysCreateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="sysUpdateTime != null" >
        AND sys_update_time = #{sysUpdateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  
  <select id="queryPlaySettment" resultMap="BaseResultMap" parameterType="com.alfred.model.PaymentSettlement" >
   
   SELECT payment_type_id,SUM(total_amount) AS  total_amount  FROM payment_settlement  
    <where >
      <if test="billNo != null" >
        AND bill_no = #{billNo,jdbcType=INTEGER}
      </if>
      <if test="paymentId != null" >
        AND payment_id = #{paymentId,jdbcType=INTEGER}
      </if>
      <if test="paymentTypeId != null" >
        AND payment_type_id = #{paymentTypeId,jdbcType=INTEGER}
      </if>
      <if test="paidAmount != null" >
        AND paid_amount = #{paidAmount,jdbcType=DECIMAL}
      </if>
      <if test="totalAmount != null" >
        AND total_amount = #{totalAmount,jdbcType=DECIMAL}
      </if>
      <if test="restaurantId != null" >
        AND restaurant_id = #{restaurantId,jdbcType=INTEGER}
      </if>
      <if test="revenueId != null" >
        AND revenue_id = #{revenueId,jdbcType=INTEGER}
      </if>
      <if test="userId != null" >
        AND user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null" >
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="sysCreateTime != null" >
        AND sys_create_time = #{sysCreateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="sysUpdateTime != null" >
        AND sys_update_time = #{sysUpdateTime,jdbcType=TIMESTAMP}
      </if>
        and to_days(create_time)=to_days(now()) 
       <![CDATA[  and payment_type_id<1000 GROUP BY payment_type_id]]>
    </where>
  </select>
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payment_settlement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payment_settlement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alfred.model.PaymentSettlement" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into payment_settlement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="billNo != null" >
        bill_no,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="paymentTypeId != null" >
        payment_type_id,
      </if>
      <if test="paidAmount != null" >
        paid_amount,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="restaurantId != null" >
        restaurant_id,
      </if>
      <if test="revenueId != null" >
        revenue_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="sysCreateTime != null" >
        sys_create_time,
      </if>
      <if test="sysUpdateTime != null" >
        sys_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billNo != null" >
        #{billNo,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="paymentTypeId != null" >
        #{paymentTypeId,jdbcType=INTEGER},
      </if>
      <if test="paidAmount != null" >
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="restaurantId != null" >
        #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="revenueId != null" >
        #{revenueId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCreateTime != null" >
        #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null" >
        #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateById" parameterType="com.alfred.model.PaymentSettlement" >
    update payment_settlement
    <set >
      <if test="billNo != null" >
        bill_no = #{billNo,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="paymentTypeId != null" >
        payment_type_id = #{paymentTypeId,jdbcType=INTEGER},
      </if>
      <if test="paidAmount != null" >
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="restaurantId != null" >
        restaurant_id = #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="revenueId != null" >
        revenue_id = #{revenueId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCreateTime != null" >
        sys_create_time = #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null" >
        sys_update_time = #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>