<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alfred.dao.UserRestaurantMapper" >
  <resultMap id="BaseResultMap" type="com.alfred.model.UserRestaurant" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="restaurant_id" property="restaurantId" jdbcType="INTEGER" />
    <result column="revenue_id" property="revenueId" jdbcType="INTEGER" />
    <result column="kitchen_id" property="kitchenId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, restaurant_id, revenue_id, kitchen_id
  </sql>
  <select id="selectByParam" resultMap="BaseResultMap" parameterType="com.alfred.model.UserRestaurant" >
    select
    <include refid="Base_Column_List" />
    from user_restaurant
    <where >
      <if test="userId != null" >
        AND user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="restaurantId != null" >
        AND restaurant_id = #{restaurantId,jdbcType=INTEGER}
      </if>
      <if test="revenueId != null" >
        AND revenue_id = #{revenueId,jdbcType=INTEGER}
      </if>
      <if test="kitchenId != null" >
        AND kitchen_id = #{kitchenId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  
  <select id="selectByRestaurantId" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
  	SELECT 
  	<include refid="Base_Column_List" />
  	FROM user_restaurant WHERE restaurant_id=#{restaurantId,jdbcType=INTEGER}
  	<![CDATA[AND user_id IN(SELECT id FROM user WHERE company_id=#{companyId,jdbcType=INTEGER} AND TYPE<#{type,jdbcType=INTEGER})]]>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_restaurant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_restaurant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  
  
   <delete id="deleteByUserId" parameterType="java.lang.Integer" >
    delete from user_restaurant
    where user_id = #{userId,jdbcType=INTEGER}
          and revenue_id is null
  </delete>
  
  <insert id="insert" parameterType="com.alfred.model.UserRestaurant" >
    insert into user_restaurant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="restaurantId != null" >
        restaurant_id,
      </if>
      <if test="revenueId != null" >
        revenue_id,
      </if>
      <if test="kitchenId != null" >
        kitchen_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="restaurantId != null" >
        #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="revenueId != null" >
        #{revenueId,jdbcType=INTEGER},
      </if>
      <if test="kitchenId != null" >
        #{kitchenId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateById" parameterType="com.alfred.model.UserRestaurant" >
    update user_restaurant
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="restaurantId != null" >
        restaurant_id = #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="revenueId != null" >
        revenue_id = #{revenueId,jdbcType=INTEGER},
      </if>
      <if test="kitchenId != null" >
        kitchen_id = #{kitchenId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="delByRevenueId" parameterType="com.alfred.model.UserRestaurant" >
      delete from user_restaurant
    <where>
     <if test="restaurantId != null" >
        and restaurant_id = #{restaurantId,jdbcType=INTEGER}
      </if>
      <if test="revenueId != null" >
        and revenue_id = #{revenueId,jdbcType=INTEGER}
      </if>
      
  
    </where>
  </update>
  
</mapper>